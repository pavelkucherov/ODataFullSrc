// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using courses_odata.Model;

namespace server.Migrations
{
    [DbContext(typeof(CoursesContext))]
    [Migration("20180702090513_Articles")]
    partial class Articles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("courses_odata.Model.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<bool>("IsCorrect");

                    b.Property<int>("TeachingActivityId");

                    b.HasKey("Id");

                    b.HasIndex("TeachingActivityId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("courses_odata.Model.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<string>("Category");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("courses_odata.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Points");

                    b.Property<int>("Position");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("courses_odata.Model.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int>("CourseId");

                    b.Property<bool>("NotRequired");

                    b.Property<int>("Position");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("courses_odata.Model.TeachingActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<int>("Discriminator");

                    b.Property<int>("LectureId");

                    b.Property<int>("Position");

                    b.Property<string>("Question");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.ToTable("TeachingActivities");
                });

            modelBuilder.Entity("courses_odata.Model.Answer", b =>
                {
                    b.HasOne("courses_odata.Model.TeachingActivity", "TeachingActivity")
                        .WithMany("Answers")
                        .HasForeignKey("TeachingActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("courses_odata.Model.Lecture", b =>
                {
                    b.HasOne("courses_odata.Model.Course", "Course")
                        .WithMany("Lectures")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("courses_odata.Model.TeachingActivity", b =>
                {
                    b.HasOne("courses_odata.Model.Lecture", "Lecture")
                        .WithMany("TeachingActivities")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
